Цель, в том, что у нас есть некий сервис, который при обновлении данных, должен рассказать об
изменениях всех его подписчиков

Мы создаем некий интерфейс Subject - который принимает изменяемые на другой стороне данные
Subject - принимает данные из вне, региструет слушателей, при обновлении данных, оповещает об этом
слушателей. (Как прихлодят данные из вне, не реализуется в данном примере).

Мы делаем реализацию Subject(WeatherData), в нем определенны переменные(входящие данные из вне),
создается пустой List слушателей(служит для регистрации слушателей), и реализуются
соответсвуюшие исполняемому классу методы.

Затем создается слушатель в этом примере CurrentCD
Он имплимитирует два интерфейса.
1. Display - который отвечает только за вывод информации на экран.
2. Observer

Обьект регистрируется при помощи интерфейса Observer. По сути мы регистрируем не самого слушателя,
а интерфейс Observer, имплимитация которого реализованно в конкретном слушателе.

При создании экспляра слушателя, вызывается конструктор, в который передается Subject, на
который экспаляр слушателя и подписывается(т.е. работа слушателя без Subject не осуществима).

